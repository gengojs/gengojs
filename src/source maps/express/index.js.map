{"version":3,"sources":["express/index.js"],"names":[],"mappings":";;;;;;;;uBAGK,eAAe;;2BACH,cAAc;;;;kCACd,sBAAsB;;;;qBACxB,CAAC,YAAW;AACzB,cAAY,CAAC;;;;;AAKb,MAAI,MAAM,CAAC;;;;;;;;AAQX,MAAI,KAAK,GAAG,SAAR,KAAK,CAAY,OAAO,EAAgB;QAAd,OAAO,yDAAG,EAAE;;AACxC,UAAM,GAAG,8BAAK,OAAO,EAAE,OAAO,EAAE,sCAAM,CAAC,CAAC;AACxC,WAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;GACjC,CAAC;;;;;;;AAOF,OAAK,CAAC,KAAK,GAAG,YAAW;AACvB,WAAO,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;GAC/C,CAAC;;;;;;AAMF,OAAK,CAAC,OAAO,mBAAU,CAAC;;AAExB,SAAO,KAAK,CAAC;CACd,CAAA,EAAG","file":"express/index.js","sourcesContent":["import {\n  version\n}\nfrom '../../package';\nimport core from 'gengojs-core';\nimport pack from 'gengojs-default-pack';\nexport default (function() {\n  'use strict';\n  /**\n   * Global scope\n   * @private\n   */\n  var global;\n  /**\n   * @method gengo\n   * @description Main function for Gengo.\n   * @param  {Object} options The configuration options.\n   * @return {Function}   The middleware for express.\n   * @public\n   */\n  var gengo = function(options, plugins = {}) {\n    global = core(options, plugins, pack());\n    return global.ship.bind(global);\n  };\n  /**\n   * @method clone\n   * @description Returns the API.\n   * @return {Function} The API.\n   * @public\n   */\n  gengo.clone = function() {\n    return global.assign.apply(global, arguments);\n  };\n  /**\n   * version.\n   * @type {String}\n   * @public\n   */\n  gengo.version = version;\n  // Export\n  return gengo;\n})();"],"sourceRoot":"/source/"}